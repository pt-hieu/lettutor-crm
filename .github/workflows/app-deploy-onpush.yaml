name: Deployment

on:
  push:
    branches: [dev]

jobs:
  apollo-unittest:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apollo

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependency
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Run Unit Test
        run: yarn test

  artemis-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./artemis

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependency
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Build
        run: yarn build

  deploy:
    needs: artemis-build
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v2
      - name: Deploy in EC2
        env:
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ubuntu@18.167.61.239 '
            cd ~/lettutor-crm &&
            git pull &&
            cd ./apollo && docker-compose down &&
            cd ../artemis && ./start.sh &&
            cd ../apollo && docker-compose up -d --build
            yes | docker prune -a --filter="label=project"  &&
          '
